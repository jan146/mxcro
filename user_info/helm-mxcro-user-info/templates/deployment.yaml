apiVersion: apps/v1
kind: Deployment
metadata:
  name: mxcro-user-info-deployment
  labels:
    app: mxcro
    microservice: user_info
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/path: {{ .Values.metricsPath }}
    prometheus.io/port: "{{ .Values.portNumber }}"
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: {{ .Values.maxUnavailable }}
      maxSurge: {{ .Values.maxSurge }}
  selector:
    matchLabels:
      app: mxcro
      microservice: user_info
  template:
    metadata:
      labels:
        app: mxcro
        microservice: user_info
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: {{ .Values.metricsPath }}
        prometheus.io/port: "{{ .Values.portNumber }}"
    spec:
      containers:
      - name: mxcro-user-info
        image: jan146/mxcro:{{ .Values.imageTag }}
        imagePullPolicy: Always
        command: ["python"]
        args: ["-m", "user_info.src.api.v1.api"]
        ports:
        - name: flask
          containerPort: {{ .Values.portNumber }}
        envFrom:
          - configMapRef:
              name: mxcro-config-map
          - secretRef:
              name: mxcro-secrets
        livenessProbe:
          httpGet:
            path: /api/v1/user_info/health/live
            port: {{ .Values.portNumber }}
          initialDelaySeconds: 30
          periodSeconds: 3
          timeoutSeconds: 1
        readinessProbe:
          httpGet:
            path: /api/v1/user_info/health/ready
            port: {{ .Values.portNumber }} 
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 3

